/**
 * Header Navigation System
 * –í–∫–ª—é—á–∞–µ—Ç scroll-based –ø–æ–≤–µ–¥–µ–Ω–∏–µ, dropdown –º–µ–Ω—é –∏ offcanvas
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ layout/index.php —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π –ø–æ–¥ v2.0 –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
 */

let isOffcanvasOpen = false;
let lastScrollY = 0;

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è header
 */
export function initHeader() {
  console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è header navigation system...');
  
  const header = document.querySelector('.header');
  
  if (!header) {
    console.warn('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç .header –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º scroll-based –ø–æ–≤–µ–¥–µ–Ω–∏–µ
  initScrollBehavior(header);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º dropdown –º–µ–Ω—é
  initDropdownMenus();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º offcanvas –º–µ–Ω—é
  initOffcanvasMenu();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
  initMobileNavigation();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–≤–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
  initSmoothNavigation();
  
  console.log('‚úÖ Header navigation system –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

/**
 * Scroll-based –ø–æ–≤–µ–¥–µ–Ω–∏–µ header
 */
function initScrollBehavior(header) {
  const scrollHandler = window.App.debounce(function() {
    const currentScrollY = window.scrollY;
    const isScrolled = currentScrollY > 50;
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∫—Ä–æ–ª–ª–∞
    if (isScrolled) {
      header.classList.remove('header--transparent');
      header.classList.add('header--scrolled');
    } else {
      header.classList.add('header--transparent');
      header.classList.remove('header--scrolled');
    }
    
    lastScrollY = currentScrollY;
  }, 10);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (window.scrollY <= 50) {
    header.classList.add('header--transparent');
    header.classList.remove('header--scrolled');
  } else {
    header.classList.remove('header--transparent');
    header.classList.add('header--scrolled');
  }
  
  window.addEventListener('scroll', scrollHandler);
  
  console.log('‚úÖ Scroll-based –ø–æ–≤–µ–¥–µ–Ω–∏–µ header –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
}

/**
 * Dropdown –º–µ–Ω—é
 */
function initDropdownMenus() {
  const dropdownItems = document.querySelectorAll('.header__nav .has-dropdown');
  
  dropdownItems.forEach(item => {
    const submenu = item.querySelector('.header__submenu');
    
    if (!submenu) return;
    
    let hoverTimeout;
    
    // –ü–æ–∫–∞–∑–∞—Ç—å dropdown –ø—Ä–∏ hover
    item.addEventListener('mouseenter', function() {
      clearTimeout(hoverTimeout);
      submenu.style.display = 'block';
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
      setTimeout(() => {
        submenu.classList.add('show');
      }, 10);
    });
    
    // –°–∫—Ä—ã—Ç—å dropdown –ø—Ä–∏ —É—Ö–æ–¥–µ –º—ã—à–∏
    item.addEventListener('mouseleave', function() {
      submenu.classList.remove('show');
      
      hoverTimeout = setTimeout(() => {
        submenu.style.display = 'none';
      }, 300);
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã—Ö –º–µ–Ω—é
    const nestedDropdowns = item.querySelectorAll('.menu-item-has-children');
    nestedDropdowns.forEach(nestedItem => {
      const nestedSubmenu = nestedItem.querySelector('.header__submenu');
      
      if (!nestedSubmenu) return;
      
      let nestedTimeout;
      
      nestedItem.addEventListener('mouseenter', function() {
        clearTimeout(nestedTimeout);
        nestedSubmenu.style.display = 'block';
        
        setTimeout(() => {
          nestedSubmenu.classList.add('show');
        }, 10);
      });
      
      nestedItem.addEventListener('mouseleave', function() {
        nestedSubmenu.classList.remove('show');
        
        nestedTimeout = setTimeout(() => {
          nestedSubmenu.style.display = 'none';
        }, 300);
      });
    });
  });
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ dropdown –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–µ–Ω—é
  document.addEventListener('click', function(event) {
    if (!event.target.closest('.header__nav')) {
      const openDropdowns = document.querySelectorAll('.header__submenu.show');
      openDropdowns.forEach(dropdown => {
        dropdown.classList.remove('show');
        setTimeout(() => {
          dropdown.style.display = 'none';
        }, 300);
      });
    }
  });
  
  console.log('‚úÖ Dropdown –º–µ–Ω—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
}

/**
 * Offcanvas –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
 */
function initOffcanvasMenu() {
  const openBtn = document.querySelector('.header__offcanvas-open-btn');
  const closeBtn = document.querySelector('.header__offcanvas-close-btn');
  const offcanvas = document.querySelector('.header__offcanvas-area');
  const overlay = document.querySelector('.body-overlay');
  
  if (!openBtn || !closeBtn || !offcanvas || !overlay) {
    console.warn('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç—ã offcanvas –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    return;
  }
  
  // –û—Ç–∫—Ä—ã—Ç–∏–µ offcanvas
  openBtn.addEventListener('click', function() {
    openOffcanvas();
  });
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ offcanvas
  closeBtn.addEventListener('click', function() {
    closeOffcanvas();
  });
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ overlay
  overlay.addEventListener('click', function() {
    closeOffcanvas();
  });
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Escape
  document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape' && isOffcanvasOpen) {
      closeOffcanvas();
    }
  });
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  window.addEventListener('resize', function() {
    if (window.innerWidth > 767 && isOffcanvasOpen) {
      closeOffcanvas();
    }
  });
  
  function openOffcanvas() {
    isOffcanvasOpen = true;
    offcanvas.classList.add('open');
    overlay.classList.add('active');
    document.body.style.overflow = 'hidden';
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ hamburger
    animateHamburger(openBtn, true);
    
    console.log('üì± Offcanvas –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ');
  }
  
  function closeOffcanvas() {
    isOffcanvasOpen = false;
    offcanvas.classList.remove('open');
    overlay.classList.remove('active');
    document.body.style.overflow = '';
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ hamburger
    animateHamburger(openBtn, false);
    
    console.log('üì± Offcanvas –º–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ');
  }
  
  console.log('‚úÖ Offcanvas –º–µ–Ω—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
}

/**
 * –ê–Ω–∏–º–∞—Ü–∏—è hamburger –∫–Ω–æ–ø–∫–∏
 */
function animateHamburger(button, isOpen) {
  const lines = button.querySelectorAll('i');
  
  if (lines.length !== 3) return;
  
  if (isOpen) {
    lines[0].style.transform = 'rotate(45deg) translate(6px, 6px)';
    lines[1].style.opacity = '0';
    lines[2].style.transform = 'rotate(-45deg) translate(6px, -6px)';
  } else {
    lines[0].style.transform = 'none';
    lines[1].style.opacity = '1';
    lines[2].style.transform = 'none';
  }
}

/**
 * –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –≤ offcanvas
 */
function initMobileNavigation() {
  const mobileMenuItems = document.querySelectorAll('.header__mobile-menu .has-dropdown');
  
  mobileMenuItems.forEach(item => {
    const link = item.querySelector(':scope > a');
    const submenu = item.querySelector('.header__mobile-submenu');
    
    if (!link || !submenu) return;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä dropdown
    const indicator = document.createElement('span');
    indicator.innerHTML = '+';
    indicator.style.cssText = 'float: right; cursor: pointer; font-size: 18px; line-height: 1;';
    link.appendChild(indicator);
    
    // –°–∫—Ä—ã–≤–∞–µ–º submenu –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    submenu.style.display = 'none';
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    link.addEventListener('click', function(event) {
      event.preventDefault();
      
      const isOpen = submenu.style.display === 'block';
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ submenu
      mobileMenuItems.forEach(otherItem => {
        const otherSubmenu = otherItem.querySelector('.header__mobile-submenu');
        const otherIndicator = otherItem.querySelector(':scope > a span');
        if (otherSubmenu && otherSubmenu !== submenu) {
          otherSubmenu.style.display = 'none';
          if (otherIndicator) otherIndicator.innerHTML = '+';
        }
      });
      
      // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–∏–π submenu
      if (isOpen) {
        submenu.style.display = 'none';
        indicator.innerHTML = '+';
      } else {
        submenu.style.display = 'block';
        indicator.innerHTML = '‚àí';
      }
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö submenu
    const nestedItems = submenu.querySelectorAll('.menu-item-has-children');
    nestedItems.forEach(nestedItem => {
      const nestedLink = nestedItem.querySelector(':scope > a');
      const nestedSubmenu = nestedItem.querySelector('.header__mobile-submenu');
      
      if (!nestedLink || !nestedSubmenu) return;
      
      const nestedIndicator = document.createElement('span');
      nestedIndicator.innerHTML = '+';
      nestedIndicator.style.cssText = 'float: right; cursor: pointer; font-size: 16px; line-height: 1;';
      nestedLink.appendChild(nestedIndicator);
      
      nestedSubmenu.style.display = 'none';
      
      nestedLink.addEventListener('click', function(event) {
        event.preventDefault();
        
        const isNestedOpen = nestedSubmenu.style.display === 'block';
        
        if (isNestedOpen) {
          nestedSubmenu.style.display = 'none';
          nestedIndicator.innerHTML = '+';
        } else {
          nestedSubmenu.style.display = 'block';
          nestedIndicator.innerHTML = '‚àí';
        }
      });
    });
  });
  
  console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
}

/**
 * –ü–ª–∞–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
 */
function initSmoothNavigation() {
  const navLinks = document.querySelectorAll('.header__nav a[href^="#"]');
  
  navLinks.forEach(link => {
    link.addEventListener('click', function(event) {
      event.preventDefault();
      
      const targetId = this.getAttribute('href');
      const targetElement = document.querySelector(targetId);
      
      if (targetElement) {
        const headerHeight = document.querySelector('.header').offsetHeight;
        window.App.scrollTo(targetId, headerHeight + 20);
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º offcanvas –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç
        if (isOffcanvasOpen) {
          const closeBtn = document.querySelector('.header__offcanvas-close-btn');
          if (closeBtn) closeBtn.click();
        }
      }
    });
  });
  
  console.log('‚úÖ –ü–ª–∞–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Å—Å—ã–ª–∫–∏ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 */
function updateActiveNavLink(activeLink) {
  const navLinks = document.querySelectorAll('.header__nav a');
  navLinks.forEach(link => {
    link.classList.remove('active');
  });
  if (activeLink) {
    activeLink.classList.add('active');
  }
}

/**
 * ScrollSpy –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
 */
function initScrollSpy() {
  const sections = document.querySelectorAll('section[id]');
  const navLinks = document.querySelectorAll('.header__nav a[href^="#"]');
  
  if (sections.length === 0 || navLinks.length === 0) return;
  
  if (!window.App.isSupported.intersectionObserver) {
    console.warn('‚ö†Ô∏è IntersectionObserver –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
    return;
  }
  
  const observer = new IntersectionObserver(
    function(entries) {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const activeLink = document.querySelector(`.header__nav a[href="#${entry.target.id}"]`);
          updateActiveNavLink(activeLink);
        }
      });
    },
    {
      rootMargin: '-20% 0px -70% 0px'
    }
  );
  
  sections.forEach(section => {
    observer.observe(section);
  });
  
  console.log('‚úÖ ScrollSpy –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

/**
 * –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
 */
export const headerAPI = {
  closeOffcanvas: function() {
    if (isOffcanvasOpen) {
      const closeBtn = document.querySelector('.header__offcanvas-close-btn');
      if (closeBtn) closeBtn.click();
    }
  },
  
  isOffcanvasOpen: function() {
    return isOffcanvasOpen;
  },
  
  updateActiveLink: function(link) {
    updateActiveNavLink(link);
  },
  
  scrollToTop: function() {
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  }
};
