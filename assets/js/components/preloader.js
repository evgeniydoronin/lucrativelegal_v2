/**
 * Preloader Component
 * Manages the loading animation with percentage counter
 */

class Preloader {
    constructor() {
        this.preloader = document.getElementById('preloader');
        this.percentage = document.getElementById('preloader-percentage');
        this.hello = document.getElementById('preloader-hello');
        this.weAre = document.getElementById('preloader-we-are');
        this.tagline = document.getElementById('preloader-tagline');
        this.slices = document.getElementById('preloader-slices');
        
        this.currentPercentage = 0;
        this.targetPercentage = 0;
        this.isComplete = false;
        this.isLoading = false;
        this.pageLoaded = false;
        this.animationId = null;
        
        this.init();
    }
    
    init() {
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞...');
        
        if (!this.preloader) {
            console.warn('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
        this.show();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
        this.startLoading();
        
        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if (document.readyState === 'complete') {
            this.onPageLoad();
        } else {
            window.addEventListener('load', () => this.onPageLoad());
        }
        
        console.log('‚úÖ –ü—Ä–µ–ª–æ–∞–¥–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
    
    show() {
        if (this.preloader) {
            this.preloader.classList.remove('hidden');
            document.body.style.overflow = 'hidden';
        }
    }
    
    hide() {
        if (this.preloader) {
            this.preloader.classList.add('hidden');
            document.body.style.overflow = '';
            
            // –û—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã –∏ –æ—Ç–º–µ–Ω—è–µ–º fallback —Ç–∞–π–º–µ—Ä
            this.destroy();
            
            // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä –∏–∑ DOM —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
            setTimeout(() => {
                if (this.preloader && this.preloader.parentNode) {
                    this.preloader.parentNode.removeChild(this.preloader);
                }
            }, 1000);
        }
    }
    
    startLoading() {
        if (this.isLoading) {
            console.log('‚ö†Ô∏è –ê–Ω–∏–º–∞—Ü–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
            return;
        }
        
        this.isLoading = true;
        console.log('üé¨ –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç 0 –¥–æ 95%');
        
        // –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –æ—Ç 0 –¥–æ 95% –∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã
        this.animateToPercentage(95, 3000);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ—ç—Ç–∞–ø–Ω–æ
        setTimeout(() => this.showHello(), 800);
        setTimeout(() => this.showWeAre(), 1800);
        setTimeout(() => this.showTagline(), 2500);
        
        // –ß–µ—Ä–µ–∑ 3.2 —Å–µ–∫—É–Ω–¥—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        setTimeout(() => {
            this.isLoading = false;
            if (this.pageLoaded) {
                this.completeLoading();
            }
        }, 3200);
    }
    
    onPageLoad() {
        console.log('üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
        this.pageLoaded = true;
        
        // –ï—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –µ—â–µ –∏–¥–µ—Ç, –∂–¥–µ–º –µ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        if (!this.isLoading) {
            this.completeLoading();
        }
    }
    
    completeLoading() {
        console.log('üéØ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ 100%');
        
        // –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–æ 100%
        this.animateToPercentage(100, 500);
        
        setTimeout(() => {
            this.startExitAnimation();
        }, 800);
    }
    
    animateToPercentage(target, duration) {
        this.targetPercentage = target;
        const startPercentage = this.currentPercentage;
        const difference = target - startPercentage;
        const startTime = performance.now();
        
        const animate = (currentTime) => {
            const elapsed = currentTime - startTime;
            const progress = Math.min(elapsed / duration, 1);
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º easing —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
            const easeProgress = this.easeOutCubic(progress);
            
            this.currentPercentage = startPercentage + (difference * easeProgress);
            this.updatePercentageDisplay();
            
            if (progress < 1) {
                this.animationId = requestAnimationFrame(animate);
            } else {
                this.currentPercentage = target;
                this.updatePercentageDisplay();
            }
        };
        
        this.animationId = requestAnimationFrame(animate);
    }
    
    updatePercentageDisplay() {
        if (this.percentage) {
            const displayPercentage = Math.round(this.currentPercentage);
            this.percentage.textContent = `${displayPercentage}%`;
        }
    }
    
    showHello() {
        if (this.hello) {
            this.hello.classList.add('visible');
            
            setTimeout(() => {
                this.hello.classList.remove('visible');
            }, 1000);
        }
    }
    
    showWeAre() {
        if (this.weAre) {
            this.weAre.classList.add('visible');
        }
    }
    
    showTagline() {
        if (this.tagline) {
            this.tagline.classList.add('visible');
        }
    }
    
    startExitAnimation() {
        console.log('üé¨ –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ –≤—ã—Ö–æ–¥–∞ –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞');
        
        // –û—Ç–º–µ–Ω—è–µ–º fallback —Ç–∞–π–º–µ—Ä —Å—Ä–∞–∑—É, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        if (window.fallbackTimer) {
            clearTimeout(window.fallbackTimer);
            window.fallbackTimer = null;
            console.log('‚úÖ Fallback —Ç–∞–π–º–µ—Ä –æ—Ç–º–µ–Ω–µ–Ω –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –≤—ã—Ö–æ–¥–∞');
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–∞–π—Å—ã
        if (this.slices) {
            this.slices.classList.add('visible');
            
            setTimeout(() => {
                this.slices.classList.add('animate');
            }, 100);
        }
        
        // –°–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
        setTimeout(() => {
            if (this.percentage) this.percentage.style.opacity = '0';
            if (this.weAre) this.weAre.style.opacity = '0';
            if (this.tagline) this.tagline.style.opacity = '0';
        }, 500);
        
        // –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
        setTimeout(() => {
            this.hide();
        }, 1200);
    }
    
    // Easing —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
    easeOutCubic(t) {
        return 1 - Math.pow(1 - t, 3);
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–∫—Ä—ã—Ç–∏—è (–Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–æ–∫)
    forceHide() {
        console.log('üö´ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–∫—Ä—ã—Ç–∏–µ –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞');
        this.hide();
    }
    
    // –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
    destroy() {
        if (this.animationId) {
            cancelAnimationFrame(this.animationId);
        }
        
        // –û—Ç–º–µ–Ω—è–µ–º fallback —Ç–∞–π–º–µ—Ä
        if (window.fallbackTimer) {
            clearTimeout(window.fallbackTimer);
            window.fallbackTimer = null;
            console.log('‚úÖ Fallback —Ç–∞–π–º–µ—Ä –æ—Ç–º–µ–Ω–µ–Ω');
        }
        
        window.removeEventListener('load', this.onPageLoad);
        
        if (this.preloader && this.preloader.parentNode) {
            this.preloader.parentNode.removeChild(this.preloader);
        }
        
        document.body.style.overflow = '';
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å
export default Preloader;
